# A reusable workflow for
# anything that needs to create the
# documentation pages.
# This will accept some input arguments
# and will upload an artifact that contains
# the html directory.
name: "Build doc and upload build/html as tar.gz"

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      targz_name:
        required: true
        type: string
      piwik:
        required: false
        type: boolean
        default: false

jobs:

  # The actual job of the build-script
  build-documentation:

    name: Build documentation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout sources
      uses: actions/checkout@v5
      with:
        submodules: false

    - name: Restore cached gifs
      uses: actions/cache@v4
      id: cache-gif
      with:
        key: gifs-${{ hashFiles('docs/os/gifs/**/*.yml') }}
        enableCrossOsArchive: true
        path: |
          docs/os/gifs/*/*.gif
        restore-keys: |
          gifs-

    - name: Node.js setup
      if: ${{ steps.cache-gif.outputs.cache-hit != 'true' }}
      uses: actions/setup-node@v4

    - name: Create gifs
      if: ${{ steps.cache-gif.outputs.cache-hit != 'true' }}
      run: |
        sudo apt-get install xvfb
        npm install -g terminalizer
        # Fix owner to root etc.
        path=$(dirname $(which terminalizer))/..
        echo "Found terminalizer here: $path/"
        chrome_sandbox=$path/lib/node_modules/terminalizer/node_modules/electron/dist/chrome-sandbox
        sudo chown root:root $chrome_sandbox
        sudo chmod 4755 $chrome_sandbox
        ls -l $chrome_sandbox

        cd docs/os/gifs
        xvfb-run --auto-servernum bash create.sh -n 2 || echo "Forced succeed $?"
        echo pwd=$(pwd)
        if [ ! -e Unix/terminal.gif ]; then
          echo "Could not find Unix/terminal.gif... something went wrong..."
          exit 1
        else
          exit 0
        fi

    - name: Python installation
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install requirements
      run: |
        python -m pip install -r requirements.txt

    - name: Build and tar.gz documentation
      run: |
        export PS_PIWIK=${{ inputs.piwik }}
        make all
        # tar gz the build/html dir
        tar -czf ${{ inputs.targz_name }} -C build/html .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.name }}
        path: ${{ inputs.targz_name }}
        retention-days: 7

